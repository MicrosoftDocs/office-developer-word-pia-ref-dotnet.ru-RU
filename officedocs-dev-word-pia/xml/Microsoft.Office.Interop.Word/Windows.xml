<Type Name="Windows" FullName="Microsoft.Office.Interop.Word.Windows">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e738330f557edb1d5d4de69c7ee35104c1402120" /><Meta Name="ms.sourcegitcommit" Value="655244c9d9a99d41d118f4fa57b5d74d46c410d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/03/2020" /><Meta Name="ms.locfileid" Value="43926789" /></Metadata><TypeSignature Language="C#" Value="public interface Windows : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Windows implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Word.Windows" />
  <TypeSignature Language="VB.NET" Value="Public Interface Windows&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Windows : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Windows = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020961-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Коллекция <see cref="T:Microsoft.Office.Interop.Word.Window" /> объектов, представляющих все доступные окна.</summary>
    <remarks><para>Используйте свойство <b>Windows</b> <see cref="T:Microsoft.Office.Interop.Word.Application" /> <see cref="T:Microsoft.Office.Interop.Word.Document" /> объекта или для возврата коллекции <b>Windows</b> . Коллекция <b>Windows</b> для объекта <b>Application</b> содержит все окна в приложении, в то время как коллекция <b>Windows</b> для объекта <b>Document</b> содержит только те окна, в которых отображается указанный документ.</para>
      <para>Используйте <see cref="M:Microsoft.Office.Interop.Word.Windows.Add(System.Object@)" /> метод или метод, <see cref="M:Microsoft.Office.Interop.Word.Window.NewWindow" /> чтобы добавить новое окно в коллекцию Windows.</para>
      <para>Используйте <b>Windows</b>( <paramref name="index" /> ), где <paramref name="index" /> — это имя окна или номер индекса, чтобы вернуть один объект <b>Window</b> .</para>
      <para>Номер индекса — это число слева от имени окна в меню Window (окно).</para>
      <para>Двоеточие (:) Кроме того, если для документа открыто несколько окон, в заголовке окна отображается число.</para>
      <para>При переключении представления в режим предварительного просмотра создается новое окно. Это окно удаляется из коллекции <b>Windows</b> при закрытии предварительного просмотра.</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Window Add (ref object Window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Word.Window Add([in]object&amp; Window) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Windows.Add(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional ByRef Window As Object) As Window" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; Microsoft.Office.Interop.Word.Window" Usage="windows.Add Window" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Window" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Window">Необязательный <b>объект</b>. Объект <b>окна</b> , для которого нужно открыть другое окно. Если этот аргумент опущен, для активного документа открывается новое окно.</param>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Word.Window" /> объект, представляющий новое окно документа.</summary>
        <returns>To be added.</returns>
        <remarks><para>Двоеточие (:) Кроме того, если для документа открыто несколько окон, в заголовке окна отображается число.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Windows.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Application ^ Application { Microsoft::Office::Interop::Word::Application ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : Microsoft.Office.Interop.Word.Application" Usage="Microsoft.Office.Interop.Word.Windows.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Word.Application" /> объект, представляющий приложение Microsoft Word.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public void Arrange (ref object ArrangeStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Arrange([in]object&amp; ArrangeStyle) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Windows.Arrange(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Arrange (Optional ByRef ArrangeStyle As Object)" />
      <MemberSignature Language="F#" Value="abstract member Arrange : obj -&gt; unit" Usage="windows.Arrange ArrangeStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ArrangeStyle" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ArrangeStyle">Необязательный <b>объект</b>. Расположение окон. Может быть любой из следующих <see cref="T:Microsoft.Office.Interop.Word.WdArrangeStyle" /> констант: <b>Вдиконс</b> или <b>вдтилед</b>.</param>
        <summary>Упорядочивает все открытые окна документов в рабочей области приложения. Так как в Microsoft Word используется один интерфейс документов (SDI), этот метод больше не оказывает никакого действия.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakSideBySide">
      <MemberSignature Language="C#" Value="public bool BreakSideBySide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BreakSideBySide() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Windows.BreakSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Function BreakSideBySide () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BreakSideBySide();" />
      <MemberSignature Language="F#" Value="abstract member BreakSideBySide : unit -&gt; bool" Usage="windows.BreakSideBySide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Завершается параллельный режим, если два окна находятся в параллельном режиме. Возвращает <b>логическое значение</b> , которое указывает, был ли метод успешным.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareSideBySideWith">
      <MemberSignature Language="C#" Value="public bool CompareSideBySideWith (ref object Document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompareSideBySideWith([in]object&amp; Document) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Windows.CompareSideBySideWith(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareSideBySideWith (ByRef Document As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CompareSideBySideWith(System::Object ^ % Document);" />
      <MemberSignature Language="F#" Value="abstract member CompareSideBySideWith : obj -&gt; bool" Usage="windows.CompareSideBySideWith Document" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Document" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Document">Обязательный <b>объект</b>. Документ, который необходимо просмотреть в параллельных окнах.</param>
        <summary>Открывает два окна в параллельном режиме.</summary>
        <returns>To be added.</returns>
        <remarks><para>Невозможно использовать метод <b>компаресидебисидевис</b> с <see cref="T:Microsoft.Office.Interop.Word.Application" /> объектом или <see cref="P:Microsoft.Office.Interop.Word._Application.ActiveDocument" /> свойством.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Windows.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Office.Interop.Word.Windows.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество элементов в указанной коллекции.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Windows.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Creator : int" Usage="Microsoft.Office.Interop.Word.Windows.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1001)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает 32 — разрядное целое число, которое указывает приложение, в котором был создан указанный объект.</summary>
        <value>To be added.</value>
        <remarks><para>Если объект был создан в Microsoft Word, это свойство возвращает шестнадцатеричное число 4D535744, представляющее строку "МСВД". Это значение также может быть представлено константным <b>вдкреаторкоде</b>.</para>
          <para>Свойство <b>Creator</b> в основном предназначено для использования в Macintosh, где каждое приложение содержит код создателя из четырех символов. Например, в Microsoft Word есть код создателя МСВД. Для получения дополнительных сведений об этом свойстве обратитесь к справочной справке по языку, включенной в Microsoft Office Macintosh Edition.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Windows.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="windows.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Word.Window this[ref object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Word.Window Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Windows.Item(System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(ByRef Index As Object) As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Word::Window ^ default[System::Object ^ %] { Microsoft::Office::Interop::Word::Window ^ get(System::Object ^ % Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : Microsoft.Office.Interop.Word.Window" Usage="Microsoft.Office.Interop.Word.Windows.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Word.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Index"><b>Объект</b> , указывающий порядковое положение или строку, представляющую имя отдельного объекта.</param>
        <summary>Возвращает отдельный объект в коллекции.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Windows.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : obj" Usage="Microsoft.Office.Interop.Word.Windows.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1002)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, представляющий родительский объект указанного объекта.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPositionsSideBySide">
      <MemberSignature Language="C#" Value="public void ResetPositionsSideBySide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetPositionsSideBySide() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Word.Windows.ResetPositionsSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetPositionsSideBySide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetPositionsSideBySide();" />
      <MemberSignature Language="F#" Value="abstract member ResetPositionsSideBySide : unit -&gt; unit" Usage="windows.ResetPositionsSideBySide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сбрасывает два окна документа, которые находятся в списке сравнить параллельно с режимом просмотра.</summary>
        <remarks><para>Метод <b>ресетпоситионссидебисиде</b> соответствует кнопке Сброс положения окна на панели инструментов сравнить рядом друг с другом.</para>
          <para>Используйте метод <b>ресетпоситионссидебисиде</b> , чтобы сбросить отображение двух документов. Например, если пользователь сводит или развертывает один из двух сравниваемых окон документов, метод <b>ресетпоситионссидебисиде</b> сбрасывает отображение, чтобы два окна отображались рядом друг с другом.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncScrollingSideBySide">
      <MemberSignature Language="C#" Value="public bool SyncScrollingSideBySide { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SyncScrollingSideBySide" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Word.Windows.SyncScrollingSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Property SyncScrollingSideBySide As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SyncScrollingSideBySide { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SyncScrollingSideBySide : bool with get, set" Usage="Microsoft.Office.Interop.Word.Windows.SyncScrollingSideBySide" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Word</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1003)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1003)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1003)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b> включает прокрутку содержимого окон одновременно. <b>False</b> запрещает одновременное прокручивание окон.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
